stages:
  - Update cache
  - Test
  - Publish

variables:
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip

.job-template:
  interruptible: true
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'schedule'"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - docker

.update-cache-template:
  stage: Update cache
  allow_failure: true
  script:
    - echo "Dependencies cache updated"
  cache:
    policy: push
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'schedule'"

.python-template:
  extends: .job-template
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements-dev.txt
  cache:
    policy: pull
    paths:
      - venv
      - .cache/pip
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

.python-3.9-template:
  extends: .python-template
  image: python:3.9

.test-template:
  extends: .python-template
  stage: Test
  variables:
    COVERAGE_FILE: .coverage.$CI_JOB_NAME
  script:
    - coverage run -m pytest tests/
  artifacts:
    paths:
      - .coverage.$CI_JOB_NAME
    expire_in: 1 hour
    when: always

Update Python 3.9 cache:
  extends:
    - .python-3.9-template
    - .update-cache-template

Unit tests (Python 3.9):
  extends:
    - .python-3.9-template
    - .test-template

Check code formatting:
  extends: .python-3.9-template
  stage: Test
  script:
    - make format

Lint:
  extends: .python-3.9-template
  stage: Test
  script:
    - make lint

Type check:
  extends: .python-3.9-template
  stage: Test
  script:
    - make type

Code coverage:
  extends: .python-3.9-template
  stage: Test
  needs:
    - Unit tests (Python 3.9)
  script:
    - coverage combine
    - coverage xml -o coverage.xml
    - coverage report -m --skip-covered
  coverage: '/\d+\%\s*$/'
  allow_failure: true
  when: always
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

Publish to Nexus:
  extends: .python-3.9-template
  stage: Publish
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - python -m build --wheel --sdist
    - twine check dist/*
    - twine upload -r nexus dist/configue[-_]cli-${CI_COMMIT_TAG}*
